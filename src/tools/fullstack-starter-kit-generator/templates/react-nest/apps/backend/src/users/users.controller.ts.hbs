import { Controller, Get, Post, Body, Param, NotFoundException } from
'@nestjs/common'; import { ApiTags, ApiOperation, ApiResponse } from
'@nestjs/swagger'; import { UsersService } from './users.service'; import {
CreateUserDto } from './dto/create-user.dto'; import { UserEntity } from
'./entities/user.entity'; @ApiTags('users') @Controller('users') export class
UsersController { constructor(private readonly usersService: UsersService) {}
@Post() @ApiOperation({ summary: 'Create a new user' }) @ApiResponse({ status:
201, type: UserEntity }) async create(@Body() createUserDto: CreateUserDto) {
return this.usersService.create(createUserDto); } @Get() @ApiOperation({
summary: 'Get all users' }) @ApiResponse({ status: 200, type: [UserEntity] })
async findAll() { return this.usersService.findAll(); } @Get(':id')
@ApiOperation({ summary: 'Get a user by ID' }) @ApiResponse({ status: 200, type:
UserEntity }) @ApiResponse({ status: 404, description: 'User not found' }) async
findOne(@Param('id') id: string) { const user = await
this.usersService.findOne(id); if (!user) { throw new NotFoundException(`User
with ID "${id}" not found`); } return user; } }