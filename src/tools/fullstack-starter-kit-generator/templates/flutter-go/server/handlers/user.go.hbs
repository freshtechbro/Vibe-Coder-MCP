package handlers import ( "encoding/json" "net/http" "{{kebabCase
  projectName
}}/server/db" "{{kebabCase projectName}}/server/middleware" ) type
UpdateUserRequest struct { Name string `json:"name"` } func GetCurrentUser(w
http.ResponseWriter, r *http.Request) { user :=
r.Context().Value(middleware.UserKey).(*db.User) json.NewEncoder(w).Encode(user)
} func UpdateUser(w http.ResponseWriter, r *http.Request) { user :=
r.Context().Value(middleware.UserKey).(*db.User) var req UpdateUserRequest if
err := json.NewDecoder(r.Body).Decode(&req); err != nil { http.Error(w,
err.Error(), http.StatusBadRequest) return } user.Name = req.Name if err :=
db.DB.Save(user).Error; err != nil { http.Error(w, "Failed to update user",
http.StatusInternalServerError) return } json.NewEncoder(w).Encode(user) }