package utils import ( "os" "time" "github.com/golang-jwt/jwt/v5" ) func
GenerateToken(userID uint) (string, error) { token :=
jwt.NewWithClaims(jwt.SigningMethodHS256, jwt.MapClaims{ "user_id": userID,
"exp": time.Now().Add(time.Hour * 24 * 7).Unix(), // 1 week }) return
token.SignedString([]byte(os.Getenv("JWT_SECRET"))) } func
ValidateToken(tokenString string) (uint, error) { token, err :=
jwt.Parse(tokenString, func(token *jwt.Token) (interface{}, error) { return
[]byte(os.Getenv("JWT_SECRET")), nil }) if err != nil { return 0, err } if
claims, ok := token.Claims.(jwt.MapClaims); ok && token.Valid { return
uint(claims["user_id"].(float64)), nil } return 0, jwt.ErrSignatureInvalid }