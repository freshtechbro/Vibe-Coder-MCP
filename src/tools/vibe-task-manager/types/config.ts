/**\n * Type definitions for Vibe Task Manager configuration\n * Separated to avoid circular dependencies\n */\n\n/**\n * LLM configuration interface\n */\nexport interface LLMConfig {\n  llm_mapping: Record<string, string>;\n}\n\n/**\n * MCP tool configuration interface\n */\nexport interface MCPToolConfig {\n  description: string;\n  use_cases: string[];\n  input_patterns: string[];\n}\n\n/**\n * MCP configuration interface\n */\nexport interface MCPConfig {\n  tools: Record<string, MCPToolConfig>;\n}\n\n/**\n * Vibe Task Manager security configuration interface\n */\nexport interface VibeTaskManagerSecurityConfig {\n  allowedReadDirectory: string;\n  allowedWriteDirectory: string;\n  securityMode: 'strict' | 'permissive';\n}\n\n/**\n * Performance configuration for startup optimization\n */\nexport interface PerformanceConfig {\n  enableConfigCache: boolean;\n  configCacheTTL: number;\n  lazyLoadServices: boolean;\n  preloadCriticalServices: string[];\n  connectionPoolSize: number;\n  maxStartupTime: number;\n  asyncInitialization: boolean;\n  batchConfigLoading: boolean;\n}\n\n/**\n * Combined configuration for Vibe Task Manager\n */\nexport interface VibeTaskManagerConfig {\n  llm: LLMConfig;\n  mcp: MCPConfig;\n  taskManager: {\n    // Task manager specific settings\n    maxConcurrentTasks: number;\n    defaultTaskTemplate: string;\n    dataDirectory: string;\n    performanceTargets: {\n      maxResponseTime: number; // ms\n      maxMemoryUsage: number; // MB\n      minTestCoverage: number; // percentage\n    };\n    agentSettings: {\n      maxAgents: number;\n      defaultAgent: string;\n      coordinationStrategy: 'round_robin' | 'least_loaded' | 'capability_based' | 'priority_based';\n      healthCheckInterval: number; // seconds\n    };\n    nlpSettings: {\n      primaryMethod: 'pattern' | 'llm' | 'hybrid';\n      fallbackMethod: 'pattern' | 'llm' | 'none';\n      minConfidence: number;\n      maxProcessingTime: number; // ms\n    };\n    // Timeout and retry configuration\n    timeouts: {\n      taskExecution: number; // ms\n      taskDecomposition: number; // ms\n      recursiveTaskDecomposition: number; // ms\n      taskRefinement: number; // ms\n      agentCommunication: number; // ms\n      llmRequest: number; // ms\n      fileOperations: number; // ms\n      databaseOperations: number; // ms\n      networkOperations: number; // ms\n    };\n    retryPolicy: {\n      maxRetries: number;\n      backoffMultiplier: number;\n      initialDelayMs: number;\n      maxDelayMs: number;\n      enableExponentialBackoff: boolean;\n    };\n    // Performance optimization settings\n    performance: {\n      memoryManagement: {\n        enabled: boolean;\n        maxMemoryPercentage: number;\n        monitorInterval: number;\n        autoManage: boolean;\n        pruneThreshold: number;\n        prunePercentage: number;\n      };\n      fileSystem: {\n        enableLazyLoading: boolean;\n        batchSize: number;\n        enableCompression: boolean;\n        indexingEnabled: boolean;\n        concurrentOperations: number;\n      };\n      caching: {\n        enabled: boolean;\n        strategy: 'memory' | 'disk' | 'hybrid';\n        maxCacheSize: number;\n        defaultTTL: number;\n        enableWarmup: boolean;\n      };\n      monitoring: {\n        enabled: boolean;\n        metricsInterval: number;\n        enableAlerts: boolean;\n        performanceThresholds: {\n          maxResponseTime: number;\n          maxMemoryUsage: number;\n          maxCpuUsage: number;\n        };\n      };\n    };\n  };\n}\n