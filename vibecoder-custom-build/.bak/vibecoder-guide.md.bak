# VibeCoder Complete Usage Guide\n\n## üéØ Overview\n\nVibeCoder MCP Server v2.4.0 provides comprehensive development tools with smart model assignment and cost optimization. This guide covers both free and paid tools, with focus on maximizing value while minimizing costs.\n\n## üÜì Free Tools (Unlimited Usage)\n\n### **1. map-codebase - Project Structure Analysis**\n```\nmap-codebase target_directory=\"/path/to/your/project\"\n```\n**What it does:** Creates comprehensive project overview with visual diagrams\n**Output:** Saved to VibeCoderOutput/code-map-generator/[timestamp]-code-map.md\n**Best for:** Understanding project structure, onboarding new developers\n\n### **2. curate-context - Smart File Selection**\n```\ncurate-context for fixing the debug table display in my WordPress plugin\n```\n**What it does:** Intelligently selects only relevant files for your specific task\n**Output:** Direct response with focused file list and context\n**Best for:** Getting exactly the files you need without reading entire project\n\n### **3. vibe-task-manager - AI-Native Task Management**\n```\nvibe-task-manager create project \"My WordPress Plugin\"\nvibe-task-manager list all projects\nvibe-task-manager create task \"Fix debug table CSS\" for project \"My WordPress Plugin\"\n```\n**What it does:** Manages projects and tasks across chat sessions with AI\n**Output:** Persistent task tracking\n**Best for:** Maintaining project state, resuming work across sessions\n\n### **4. get-job-result - Status Tracking**\n```\nget-job-result jobId=\"[job-id-from-any-command]\"\n```\n**What it does:** Gets status/results of asynchronous operations\n**Use for:** All commands return job IDs - use this to get results\n\n### **5. run-workflow - Automated Sequences**\n```\nrun-workflow workflowName=\"newProjectSetup\" workflowInput={\"projectName\": \"MyApp\"}\n```\n**What it does:** Executes predefined sequences of multiple tools\n**Check:** workflows.json file for available workflows\n**Best for:** Automating common development sequences\n\n### **6. process-request - Smart Routing**\n```\nprocess-request request=\"I need help with my WordPress plugin debug table\"\n```\n**What it does:** Automatically routes to the best tool for your request\n**Best for:** When unsure which tool to use\n\n## üí∞ Paid Tools (Cost-Optimized)\n\n### **Research Tools**\n\n#### **research - Deep Web Research (~$0.02/query)**\n```\nresearch query=\"WordPress debug logging best practices 2025\"\n```\n**What it does:** Deep research using Perplexity Sonar API\n**Output:** Saved to VibeCoderOutput/research-manager/[timestamp]-research.md\n**Best for:** Technical research, best practices, comparisons\n**Cost:** ~$0.02 per query\n\n### **Documentation Generation**\n\n#### **generate-prd - Product Requirements (~$1-2/doc)**\n```\ngenerate-prd productDescription=\"WordPress plugin for comment management\"\n```\n**What it does:** Creates formal Product Requirements Document\n**Output:** Saved to VibeCoderOutput/prd-generator/[timestamp]-prd.md\n**Best for:** Project planning, client documentation\n\n#### **generate-user-stories - User Stories (~$0.50-1/set)**\n```\ngenerate-user-stories productDescription=\"WordPress plugin for comment management\"\n```\n**What it does:** Creates user stories with acceptance criteria\n**Output:** Saved to VibeCoderOutput/user-stories-generator/[timestamp]-user-stories.md\n**Best for:** Feature planning, agile development\n\n#### **generate-task-list - Task Breakdown (~$0.50/list)**\n```\ngenerate-task-list productDescription=\"Fix debug table\" userStories=\"[user stories]\"\n```\n**What it does:** Breaks down work into specific coding tasks\n**Output:** Saved to VibeCoderOutput/task-list-generator/[timestamp]-task-list.md\n**Best for:** Sprint planning, complex feature breakdown\n\n#### **generate-rules - Development Standards (~$0.25-0.50/set)**\n```\ngenerate-rules productDescription=\"WordPress plugin development\"\n```\n**What it does:** Creates coding standards and guidelines\n**Output:** Saved to VibeCoderOutput/rules-generator/[timestamp]-rules.md\n**Best for:** Team standards, code quality guidelines\n\n### **Project Generation**\n\n#### **generate-fullstack-starter-kit - Project Boilerplate (~$1-3/kit)**\n```\ngenerate-fullstack-starter-kit use_case=\"WordPress plugin with admin interface\"\n```\n**What it does:** Creates complete project boilerplate with setup\n**Output:** Saved to VibeCoderOutput/fullstack-starter-kit-generator/[timestamp]/\n**Best for:** Starting new projects, proof of concepts\n\n## üöÄ Optimized Workflows\n\n### **For Bug Fixes (Free)**\n1. `curate-context for fixing [specific issue]`\n2. Work on suggested files\n3. `vibe-task-manager create task \"Fix [issue]\"` (optional tracking)\n\n### **For New Features (Mixed)**\n1. `curate-context for adding [feature]` (Free)\n2. `research query=\"[technology] best practices\"` (~$0.02)\n3. `generate-user-stories productDescription=\"[feature]\"` (~$0.50)\n4. `generate-task-list` based on user stories (~$0.50)\n5. `vibe-task-manager` to track progress (Free)\n\n### **For New Projects (Mixed)**\n1. `research query=\"[project type] architecture 2025\"` (~$0.02)\n2. `generate-prd productDescription=\"[project]\"` (~$1-2)\n3. `generate-fullstack-starter-kit use_case=\"[project]\"` (~$1-3)\n4. `vibe-task-manager create project \"[name]\"` (Free)\n\n## üí° Cost Optimization Tips\n\n### **Minimize Paid Tool Usage**\n- Use `curate-context` instead of full project research\n- Use `map-codebase` to understand structure before asking for research\n- Batch related questions into single research queries\n- Use `vibe-task-manager` to track everything across sessions\n\n### **Maximize Free Tool Value**\n- Start every session with `curate-context` for your specific task\n- Use `vibe-task-manager` to maintain state across chat sessions\n- Use `map-codebase` to understand new codebases\n- Use `process-request` when unsure which tool to use\n\n### **Smart Model Assignment (Automatic)**\nThe system automatically uses the most cost-effective models:\n- **Code tasks:** DeepSeek R1 (free, high performance)\n- **General tasks:** Llama 4 Maverick (free, multimodal)\n- **Research:** Perplexity (paid, but only when needed)\n- **Reasoning:** DeepSeek Distill (free, excellent for analysis)\n\n## üìÅ Output Organization\n\nBase directory: `C:\\Users\\Ascension\\Claude\\root\\vibe-coder-mcp\\VibeCoderOutput\\`\n\n**Free tool outputs:**\n- `code-map-generator/` - Project structure maps\n- `vibe-task-manager/` - Task and project data\n- `context-curator/` - Curated context packages\n- `workflow-runner/` - Workflow execution results\n\n**Paid tool outputs:**\n- `research-manager/` - Research reports\n- `prd-generator/` - Product requirements\n- `user-stories-generator/` - User stories\n- `task-list-generator/` - Task breakdowns\n- `rules-generator/` - Development standards\n- `fullstack-starter-kit-generator/` - Project templates\n\n## üéØ Recommended Monthly Usage\n\n**For 5+ Projects:**\n- **Free tools:** Unlimited usage\n- **Research:** 10-20 queries (~$0.20-0.40)\n- **Documentation:** 2-5 PRDs (~$2-10)\n- **User stories:** 3-8 sets (~$1.50-8)\n- **Task lists:** 5-10 lists (~$2.50-5)\n- **Starter kits:** 1-2 kits (~$1-6)\n\n**Total monthly cost:** $5-25 (mostly free usage)\n\n## üìà Success Metrics\n\n**Efficiency Gains:**\n- 90% reduction in manual file hunting (curate-context)\n- 100% project state retention (vibe-task-manager)\n- 80% faster project onboarding (map-codebase)\n- 95% cost reduction vs. paid-only alternatives\n\n**Quality Improvements:**\n- Consistent coding standards (generate-rules)\n- Comprehensive documentation (generate-prd)\n- Proper task breakdown (generate-task-list)\n- Research-backed decisions (research)\n\nThis guide maximizes the value of VibeCoder while minimizing costs through smart tool selection and workflow optimization.\n", "oldText": "# VibeCoder OLD VERSION - Complete Accurate Guide\n\n## üîç What YOUR Old Version Actually Has (9 Tools)\n\n### **FREE TOOLS**\n1. **map-codebase** - Maps project structure with diagrams\n2. **get-job-result** - Check status of running jobs  \n3. **run-workflow** - Execute predefined tool sequences\n\n### **PAID TOOLS (Need OpenRouter API)**\n4. **research** - Deep research using Perplexity Sonar\n5. **generate-prd** - Product Requirements Documents\n6. **generate-user-stories** - User stories with acceptance criteria\n7. **generate-task-list** - Development task breakdowns\n8. **generate-rules** - Development standards/guidelines\n9. **generate-fullstack-starter-kit** - Project boilerplate generation\n\n## üìù EXACT Commands to Type\n\n### **Map Your Project Structure (FREE)**\n```\nmap-codebase target_directory=\"/Users/Ascension/Claude/root/filesystem/plugins/tr-comments-import-export\"\n```\n**What it does:** Creates visual project overview, file relationships, function listings\n**Output:** Saved to VibeCoderOutput/code-map-generator/[timestamp]-code-map.md\n**Use for:** Understanding project structure, finding relevant files manually\n\n### **Research Technical Topics (PAID ~$0.02/query)**\n```\nresearch query=\"WordPress debug logging best practices 2024\"\n```\n**What it does:** Deep research using Perplexity Sonar API\n**Output:** Saved to VibeCoderOutput/research-manager/[timestamp]-research.md\n**Use for:** Best practices, comparisons, technical information\n\n### **Generate Project Documentation (PAID ~$1-2/doc)**\n```\ngenerate-prd productDescription=\"WordPress plugin for comment import/export with debug logging\"\n```\n**What it does:** Creates formal Product Requirements Document\n**Output:** Saved to VibeCoderOutput/prd-generator/[timestamp]-prd.md\n**Use for:** Project planning, client documentation\n\n### **Generate User Stories (PAID ~$0.50-1/set)**\n```\ngenerate-user-stories productDescription=\"WordPress plugin for comment import/export\"\n```\n**What it does:** Creates user stories with acceptance criteria\n**Output:** Saved to VibeCoderOutput/user-stories-generator/[timestamp]-user-stories.md\n**Use for:** Feature planning, agile development\n\n### **Generate Task Lists (PAID ~$0.50/list)**\n```\ngenerate-task-list productDescription=\"Fix debug table display\" userStories=\"[paste user stories here]\"\n```\n**What it does:** Breaks down work into specific coding tasks\n**Output:** Saved to VibeCoderOutput/task-list-generator/[timestamp]-task-list.md\n**Use for:** Sprint planning, breaking down complex features\n\n### **Generate Development Rules (PAID ~$0.25-0.50/set)**\n```\ngenerate-rules productDescription=\"WordPress plugin development\"\n```\n**What it does:** Creates coding standards and guidelines\n**Output:** Saved to VibeCoderOutput/rules-generator/[timestamp]-rules.md\n**Use for:** Team standards, code quality\n\n### **Generate Project Starter Kit (PAID ~$1-3/kit)**\n```\ngenerate-fullstack-starter-kit use_case=\"WordPress plugin with admin interface\"\n```\n**What it does:** Creates complete project boilerplate\n**Output:** Saved to VibeCoderOutput/fullstack-starter-kit-generator/[timestamp]/\n**Use for:** Starting new projects\n\n### **Run Workflows (FREE)**\n```\nrun-workflow workflowName=\"[workflow-name]\" workflowInput={\"key\": \"value\"}\n```\n**What it does:** Executes predefined sequences of tools\n**Check:** workflows.json file for available workflows\n**Use for:** Automating common sequences\n\n### **Check Job Status (FREE)**\n```\nget-job-result jobId=\"[job-id-from-any-command]\"\n```\n**What it does:** Gets status/results of running jobs\n**Use for:** All commands return job IDs - use this to get results\n\n## üîÑ Complete Workflow for Your Debug Table Issue\n\n### **Step 1: Map Your Project (FREE)**\n```\nmap-codebase target_directory=\"/Users/Ascension/Claude/root/filesystem/plugins/tr-comments-import-export\"\n```\n\n### **Step 2: Check Job Status**\n```\nget-job-result jobId=\"[job-id-from-step-1]\"\n```\n\n### **Step 3: Review Output File**\n- Go to: `C:\\Users\\Ascension\\Claude\\root\\vibe-coder-mcp\\VibeCoderOutput\\code-map-generator\\`\n- Open the latest .md file\n- Look for files related to \"debug\", \"log\", \"admin\", \"table\"\n\n### **Step 4: Optional Research (PAID)**\n```\nresearch query=\"WordPress admin table display debugging best practices\"\n```\n\n### **Step 5: Work on Identified Files**\nBased on the map, edit the specific debug-related files directly.\n\n## üí∞ Cost Breakdown\n\n**Free Usage:**\n- map-codebase (unlimited)\n- get-job-result (unlimited)  \n- run-workflow (unlimited)\n\n**Paid Usage (requires OpenRouter API key):**\n- research: $0.005-0.02 per query\n- generate-prd: $1-2 per document\n- generate-user-stories: $0.50-1 per set\n- generate-task-list: $0.50 per list\n- generate-rules: $0.25-0.50 per set\n- generate-fullstack-starter-kit: $1-3 per kit\n\n**Monthly estimate for 5+ projects:** $5-25\n\n## üìÅ Where Files Are Saved\n\nBase directory: `C:\\Users\\Ascension\\Claude\\root\\vibe-coder-mcp\\VibeCoderOutput\\`\n\n**Subdirectories:**\n- `code-map-generator/` - Project structure maps\n- `research-manager/` - Research reports  \n- `prd-generator/` - Product requirements\n- `user-stories-generator/` - User stories\n- `task-list-generator/` - Task breakdowns\n- `rules-generator/` - Development standards\n- `fullstack-starter-kit-generator/` - Project templates\n- `workflow-runner/` - Workflow outputs\n\n## ‚ö†Ô∏è What Your Version CANNOT Do\n\n**Missing from old version:**\n- curate-context (smart file selection)\n- vibe-task-manager (AI task management)\n- process-request (smart routing)\n- Agent coordination\n- Context curation\n- Automatic relevant file detection\n\n**What you have to do manually:**\n- Read the full code map to find relevant files\n- Figure out which files matter for your specific issue\n- Track project state across chat sessions yourself\n\n## üéØ Your Exact Workflow\n\n**For any project issue:**\n1. Run `map-codebase` to get project overview\n2. Manually read the generated map file\n3. Identify which files are relevant to your issue\n4. Work on those specific files\n5. Optional: Use paid tools for research/documentation\n\n**That's it. No smart automation - you do the file selection yourself.**"}]